services:
  # Neo4j数据库
  neo4j:
    image: neo4j:5.26.0
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474" # HTTP Web界面
      - "${NEO4J_BOLT_PORT:-7687}:7687" # Bolt协议
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-demodemo}
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=512m
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - graphiti

  # Graphiti MCP服务器
  graphiti-mcp:
    image: zepai/knowledge-graph-mcp:latest
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    env_file:
      - ./mcp_server/.env
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=demodemo
      - PATH=/root/.local/bin:${PATH}
    ports:
      - "${MCP_SERVER_PORT:-8000}:8000"
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]
    networks:
      - graphiti

  # MCP Web客户端
  mcp-web-client:
    image: graphiti-mcp-web-client:latest
    build:
      context: ./mcp_client_web
      dockerfile: Dockerfile
    depends_on:
      - graphiti-mcp
    environment:
      - MCP_SERVER_URL=http://graphiti-mcp:8000/sse
      - MCP_TRANSPORT=sse
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    ports:
      - "${WEB_CLIENT_PORT:-5000}:5000"
    networks:
      - graphiti

  # MCP命令行客户端 (用于演示和测试)
  mcp-cli-client:
    image: graphiti-mcp-cli-client:latest
    build:
      context: ./mcp_client
      dockerfile: Dockerfile
    depends_on:
      - graphiti-mcp
    environment:
      - MCP_SERVER_URL=http://graphiti-mcp:8000/sse
      - MCP_TRANSPORT=sse
    profiles:
      - demo  # 只在demo profile时启动
    networks:
      - graphiti

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  graphiti:
    driver: bridge